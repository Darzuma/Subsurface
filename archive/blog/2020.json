{"year":[{"moty":"10","days":[{"dotm":"06","blog":" <p> Vuetify 的图标组件，使用手感碾压其他 UI 框架，今儿个咱自己实现出来了！Mew 框架又填新丁了。 </p> ","imgs":["2020/20201006.1.jpg","2020/20201006.2.jpg"]}]},{"moty":"09","days":[{"dotm":"30","blog":" <p> <b>产品日志: </b>原料入库、其他物料到使用部门等情况，捋顺出点线头。 </p> <p> 老板急眼了，发火责怪我怠慢。<b>当初说好的，我辅助，现在变成一人独干</b>，这本身是件好事，问题就出在我“力不能及”上，明明干不了，还硬挺着 ... ... <b>如果将来代码实现时，也让我独干，那就亏死了！</b> </p> ","imgs":["2020/20200930.1.png"]},{"dotm":"27","blog":" <p> <b>产品日志: 分析出入库流程，全是问题，没有结果</b>。 </p> <p> 程序员遇到问题，只需要思考明白“这个问题究竟是什么”就可以了。而<b>做产品，即使你想明白问题究竟是什么了，最后到头来又发现，这个问题本身并不存在</b>。 </p> <p> 我向老板解释过做产品的困难，设计上的茫然，成果遥遥无期，逻辑依赖细节，更需要无尽的沟通和实时的汇报，可在他们看来，竟然不是我力不能及，竟然只是“不肯努力”，这都什 ... ... 唉！ </p> ","imgs":["2020/20200927.1.jpg"]},{"dotm":"25","blog":" <p> <b>产品日志:</b> 为了搞明白“撤销申请”的功能是否值得做，我为用户描述一种使用场景，<b>当用户听到“手抖”一词时，情绪激动，反应激烈，今后永远不会再说“手抖”了</b>。 </p> <p> 我提出利用超管解决特殊情况，被所有人否定掉了。 </p> "},{"dotm":"24","blog":" <p> <b>产品日志:</b> 设计物料申请与物料订单之间的关系；做出示意图，与采购沟通；订单内中的同一种物料，只要是来自不同的申请，就分开显示；一个订单中，可以有来自不同申请中的物料，但一个订单只对应一个供应商，只对应一份合同。 <b>我觉得做产品，3分靠沟通，6.9分靠汇报，0.1分靠设计</b>。 </p> <p> 你说设计不重要吗？<b>你设计得再好，自己讲不出来，别人看图文又看不懂，有毛用？</b> </p> ","imgs":["2020/20200924.1.png","2020/20200924.2.png"]},{"dotm":"23","blog":" <p> <b>产品日志:</b> 沟通、设计采购分类入口；物料的特殊情况，设计为属性，便于理解，便于汇报和沟通；修改了原来系统中的一些用词。 </p> ","imgs":["2020/20201007.1.png","2020/20201007.2.png","2020/20201007.3.png"]}]},{"moty":"06","days":[{"dotm":"29","blog":" <p> 苦研 JeeCG 和 vue-admin 这两个“半部秘籍”，终于在前端构建这块有点眉目了。 </p> <p> vuetify 自定义（屏幕适配）断点，SCSS 变量 xs 的值必须是 0 ，惨。 </p> "},{"dotm":"28","blog":" <p> 前端存 token 的方式多种多样，官方 api(localStorage) 肯定比 Vuex 快很多。 </p> "}]},{"moty":"05","days":[{"dotm":"29","blog":" <p> 需要一套趁手的工具，现在这种纯手撸的干活方式，不爽。 </p> <p> 以前看别人的代码，感觉他们为了赶时间真是不管不顾，结果自己也遇到这种情况时：“呵呵，时间这么少，怪我咯？” </p> "},{"dotm":"21","blog":" <p> 以前听过一个故事，讲一个新手如何能区分小鸡的雌雄，也不需要什么技巧，就是猜，不停地猜，最后就会越猜越准，直到凭直觉就能 90% 准确。所以，我的问题不是研究技术，而是应该锻炼直觉？好像确实是这样、、、 </p> "},{"dotm":"18","blog":" <p> 看了 Vue Mastery 的 AXIOS 的封装教程，为什么跟别人写的不太一样呢？仔细一对比，发现洋大人没把技术讲完啊，AXIOS 的拦截器被 Gregg 吃了吗？ </p> ","imgs":["2020/20200518 axios.JPG","2020/20200518 axios 2.JPG","2020/20200518 axios 3.JPG"]},{"dotm":"16","blog":" <p> 两次被折腾的经历，才得出了一个经验：<b>Gitbub 只能用来处理代码。</b>如果不小心混入一个 PSD 什么的，迟早要出事儿。 </p> <p> 原来，人眼的关注点，大概只占视野的 1%，而这 1% 面积内的分辨率，高达 300dpi，剩下 99% 的视野内，分辨率仅 3dpi。以后再看到 “瞎子”，也就不生气了，因为人人都一样，都是 “瞎子”，科学，也能改变人的脾气。 </p> "},{"dotm":"15","blog":" <p> 读《认知与设计：理解 UI 设计准则》很疑惑，书中的内容与 \"准则\" 二字有关系吗？ 最后发现，该书叫《Designing with The Mind in Mind》，副标题 \"Simple guide to Understanding ... \" !!!∑(ﾟДﾟノ)ノ 哪里有“设计准则”？都是翻译强行加戏。 </p> <p> 真感谢中文翻译的强行加戏，若不是被它的名字吸引，很多人根本不考虑这种科学类读物。 </p> <p> 其实<b>《认知与设计：理解 UI 设计准则》写的是，大脑通过视觉获取信息的特征</b>，比规范类资料更底层，至于“规范/准则/标准”什么的，等咱自己制定吧。 </p> <p> 以下是作者 Jeff Johnson 的视频截图，和书的原版封面。 </p> ","imgs":["2020/20200516 Jeff Johnson.jpg","2020/20200516 Jeff Johnson_2.jpg","2020/20200516 UI 设计准则.jpg"]},{"dotm":"10","blog":" <p> 通过逐字细读，发现了\"隧道技术\"四个字，由此得知一个名曰 PPTP 的协议。 </p> <p> VPN 原理，与当初自己推(瞎)测(猜)的本地劫持，完全不是一样呵 ☺ </p> "},{"dotm":"07","blog":" <p> 看到一个很勤勉的博客<a href=\"https://blog.csdn.net/qq_35081380\" target=\"_blank\">qq_35081380 </a>，真是一个努力到有趣的家伙。其中有一篇记录了 AXIOS 的封装，又是虎躯一震，AXIOS 还要封装？ </p> <p> 查了一下是为了应付后端接口的频繁修改，有道理，写个配置文件就行了，既然配置文件都写了，于是顺手就给封装了？唉，这些鸡肋等工作中再处理吧！ </p> "},{"dotm":"05","blog":" <p> 整理了 Vue 中 $emit 相关概念，做成一篇小文（<a href=\"http://www.subsurface.cn/essay/JavaScript,API/Vue.prototype.$emit\">Vue.prototype.$emit</a>），整理前以为 $emit 没什么用，研究之后才明白，为什么 $emit 会成为面试热点： 因为这个方法中暗藏三个概念，所以能把 $emit 讲透的，至少是个熟练工了。 </p> "},{"dotm":"01","blog":" <p> 自觉已经是&nbsp;Vue&nbsp;熟练工了，却对当初优先选择&nbsp;vue&nbsp;后悔，如果现在是&nbsp;React&nbsp;熟练工，还能向外企努力一下？ </p> <p> 看到有说&nbsp;React&nbsp;招不到人的，有说&nbsp;React&nbsp;的岗位都被&nbsp;Vue&nbsp;抢了的，但说到&nbsp;Angular&nbsp;时，双方立场又很一致\"等你&nbsp;Angular&nbsp;项目搭建完，React/Vue&nbsp;都上线运营了\"。 <b>此话颇有道理，有人要100根圆木，那么应该租电锯，招工人，租卡车，快速搞出100根木头交货，而不是去开一家木材公司。</b> </p> "}]},{"moty":"04","days":[{"dotm":"30","blog":" <p> 最近听机核一期节目，讲的是克苏鲁世界的起源之作<a href=\"https://www.gcores.com/radios/95336\" target=\"_blank\">《疯狂山脉》</a>，原作确实非常悬疑有趣。 </p> <p> 一想到 XX 技术我还没掌握，就瞬间感觉自己缩小了，这种扑面而来的恐惧，是现实的恐惧，比克苏鲁大章鱼什么的更要命。 </p> ","imgs":["2020/克苏鲁.jpg","2020/atthemountains.jpg","2020/atthemountains2.jpg"]},{"dotm":"28","blog":" <p> 用了 40 天重构博客，今日重新上线。 </p> "},{"dotm":"07","blog":" <p> Vue&nbsp;的计算属性，即使没被引用，也会更新，还能被&nbsp;watch，整整一年才领悟到，泪|*´Å`)ﾉ </p> <p> 这种实践，中英教程中都未出现过，对于自学者，真是一记暴击。 </p> ","imgs":["2020/vue 计算属性可以被 watch.png"]},{"dotm":"02","blog":" <p> 实现了一个响应式图片列表。本想再实现一个拖拽移动和滚轮缩放功能，折腾了两小时又被无情地打了脸，最后还是 NPM 了别人的组件。 </p> ","imgs":["2020/打脸.png"]}]},{"moty":"03","days":[{"dotm":"30","blog":" <p> 重构了博客列表、分页组件 和 侧栏里的一堆组件，重写 CSS 很累，优化 JS 很享受。 </p> <p> 打穿了一款 RTT 游戏 —— 影子战术（2017的德国游戏），有兴地看了半部《七武士》（1954年的日本电影），又听了机核的“忍者漫谈”（2019的一期电台节目）。<b>一个文化，半个世纪，三个故事。</b> 优秀的文化输出，总是能提升小确幸们的生活质量。 </p> "},{"dotm":"25","blog":" <p> 备案被驳回，短信提示“根据提示修改”，这个提示信息到底在哪呢 (っ°Д°;)っ ？ </p> <p> 腾讯云和阿里云的对象储存，根本用不明白，但人家备案快，初审只要一天就提交了， <b>华为云的用户体验碾压前者，可备案速度汗颜啊，两次初审都是10天起。 </b> </p> "},{"dotm":"21","blog":" <p> 花心了看了一天&nbsp;C++，其实很多人用的&nbsp;VS Code，实际是&nbsp;Visual&nbsp;Studio&nbsp;Community，只是他们不说而已。 </p> <p> 总有东西，自欺了很久，待明白过来为时晚矣（总有刁民想害朕？） </p> "},{"dotm":"20","blog":" <p> 重构博客，vuetify 的一些组件总是卡顿，特别是那个滚动缩放的头部组件，总是很迟钝似地，于是想自己实现一个“完美”的头部组件，经过一天的各种施法，哈哈哈失败了~ </p> <p> 这次重构，把以前没踩过的坑，都给补上了。 </p> "},{"dotm":"17","blog":" <p> 收了个低端&nbsp;4K&nbsp;IPS，用来调适配，图像模式还可以用软件拯救一下，背光真是没救了，线还不够长，找来根&nbsp;HDMI&nbsp;1.4 一接才&nbsp;30&nbsp;帧，这几天会比较难过。 </p> <p> <b>低端显示器，差就差在背光和灰度上。</b> </p> "},{"dotm":"12","blog":" <p> 终于把日志系统完成了，继续在重构的边缘摇摇欲坠。 </p> <p> 反思 RTS 没落，发现这个类型本身就是个畸形，从游戏性的角度讲，任何游戏都尽量追求单一的核心玩法，放到 RTS 上说，就是： 核心玩法只能从 操作、运营、策略 三者中选一个。 </p> <p> 传统 RTS 把三者强耦合地结合一起，必然导致 PVP 过程中新老玩家的愤懑。<b>为了将 RTS 的操作、运营、策略三者“解耦”，演化出了现在的 MOBA、SIM 和 SLG，这就是“历史进程”吧！</b> </p> <p>大厂都很清楚，逆历史潮流的事情做不得。</p> "},{"dotm":"10","blog":" <p> 继续完善日志系统，修了成吨的 BUG。 </p> <p> 想做个游戏引擎ψ(*｀ー´)ψ 梦想总是要有的！试着起了好多名字（Ark，Arnold，Armey ...），不如干脆用&nbsp;RTS&nbsp;的核心玩法 “Strategy” 命名，爽哉。 </p> "},{"dotm":"09","blog":" <p> 重做了日志的数据结构；重做了日志UI；完成了月份组件的功能&nbsp;blabla ……<br> </p> <p> 淋浴头积满了水垢，喷水口变细，水压变大，喷水似暴雨梨花针！用白醋泡两分钟溶解松散了，实践好用！ </p> "},{"dotm":"06","blog":" <p> 实践得知，几百条数据这种小列表，根本不需要考虑性能，简单粗暴地对待即可。 </p> <p> <b>图片的懒加载是必须的，浏览器扛得住，钱包也扛不住、、、</b> </p> "},{"dotm":"05","blog":" <p> 设计了2个小时的日志页面，俩小时后再回看这设计，又废了： </p> <p> 1. 画风突然迥异-界面变了，使用非常不舒适<br> 2. 内容不分主次-侧栏太大<br> 3. 移动端不便利-PC端无法自适应到移动端<br> </p> <p> 最后还是照搬了文章页UI，只在左侧加了点风格一致的小功能组件。 </p> <p> 终究是没忍住重构的欲望，重构了部分组件，看来 Vue 的灵活性也体现在可以快速重构上。 </p> <p> 很想看看&nbsp;Angular&nbsp;的“工程之美”，可惜还是不敢太早地花时间在&nbsp;Angular&nbsp;上。如果将来可以选择，那一定是&nbsp;Angular&nbsp;了。 </p> "},{"dotm":"04","blog":" <p> 修博客系统的&nbsp;BUG；设计日志页面，强压着重构之火。 </p> <p> 50张手抓饼到货，早餐一口气煎了8个，再也不嫌贵了。 </p> "},{"dotm":"03","blog":" <p> 贪图小利，淘宝了一个腾讯云授权码，用来备案域名，不到半年就挂了。 </p> <p> 用别人的授权码，会使自己获得“空壳主体”这种神奇属性，需要向管局提交书面申请，“<b>申请删除自己</b>”才能消除这个&nbsp;DEBUFF (ﾟДﾟノ)ノ </p> ","imgs":["2020/空壳主体.png"]}]}],"info":{"total":33,"mean":6}}